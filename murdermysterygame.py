# -*- coding: utf-8 -*-
"""MurderMysteryGame.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-9QXa51zLFwnQgidid7OzkPuMX_aCGZx
"""

#INTRODUCTION
!pip install ColabTurtlePlus
from ColabTurtlePlus.Turtle import *

clearscreen()
def stars():
  hideturtle()
  speed(12)
  color("red")
  bgcolor('black')
  fillcolor('red')
  penup()
  goto(-325, 40)

  begin_fill()

  for i in range(5):
    forward(100)
    right(144)
  end_fill()

  penup()
  forward(120)
  pendown()

  begin_fill()
  for i in range(5):
    forward(100)
    right(144)
  end_fill()

  penup()
  forward(120)
  pendown()

  begin_fill()
  for i in range(5):
    forward(100)
    right(144)
  end_fill()

  penup()
  forward(120)
  pendown()

  begin_fill()
  for i in range(5):
    forward(100)
    right(144)
  end_fill()

  penup()
  forward(120)
  pendown()

  begin_fill()
  for i in range(5):
    forward(100)
    right(144)
  end_fill()
stars()


def writing():
  penup()
  goto(-300, 100)
  pendown()
  color('white')
  write("MURDER MYSTERY", font = ("Arial", 65, "bold"))
writing()

#INTRODUCTION TO GAME

print("We will start by introducing the victim: The Baron Von Hapnick. ")
print("\n The Baron Von Hapnick was a British aristocrat with a large fortune and had ties to the British royal family. \n He is the current CEO of a large oil refinery company. The Baron was murdered after walking home from a \n gambling party in a dark alley of Westminster, UK. Nobody knows what time \n the Baron was murdered, but his body was found the next morning by a police officer. A list was found in the dead Baron’s \n coat pocket with the names of 3 possible suspects. You are the lead detective \n on this case and must figure out which of the suspects is the murderer.  ")
print()
#Suspects


print("Nick O'Teen \n From: Ireland \n Occupation: Unknown \n Alibi: In his apartment building \n Relation to Victim: None \n Important to note: Is part of the lower-class and hates the rich")
print()
print("Mary Von Hapnick \n From: London \n Occupation: Housewife \n Alibi: Supposedly with the victim up to his murder \n Relation to Victim: Widow \n Important to note: During examination, bruises and scratches were found across her neck and body often")
print()
print("Barry McCaulkiner \n From: Twickenham \n Occupation: CFO of Baron's oil refinery \n Relation to Victim: Co-worker, with victim as his boss \n Important to note: Is next in line for the hierarchy to take over the company should the Baron die")
print()

#FIRST CHALLENGE- CAESAR CIPHER

from ColabTurtlePlus.Turtle import *

clearscreen()
bgcolor("black")
setup(1000, 750)
hideturtle()

def writing():
  penup()
  goto(-300, 100)
  pendown()
  color('white')
  write("CHALLENGE 1", font=("Arial", 65, "bold"))

  penup()
  goto(-400, 50)
  pendown()
  write("The following encrypted code was recovered from the Baron's note.", font=("Arial", 20, "bold"))

  penup()
  goto(-400, 25)
  pendown()
  write("You must decrypt the code to reveal the secret message!", font=("Arial", 20, "bold"))

  penup()
  goto(-400, 0)
  pendown()
  write("l nqrz zkdw brxu sodq lv dqg l dp qrw jrlqj wr ohw lw kdsshq.", font=("Arial", 20, "bold"))

  penup()
  goto(-400, -25)
  pendown()
  write("pb frpsdqb dqg pb iruwxqh duh pxfk wrr lpsruwdqw wr ph, dqg brx duh", font=("Arial", 20, "bold"))

  penup()
  goto(-400, -50)
  pendown()
  write("pxfk wrr lpsruwdqw wr ph, dqg brx duh wkh odvw shuvrq lq wkh zruog wkdw zloo hyhu.", font=("Arial", 20, "bold"))
  
  penup()
  goto(-400, -75)
  pendown()
  write("jhw wkhlu kdqgv rq lw. dv ri wrpruurz, l dp uhprylqj brx iurp pb zloo.-eyk", font=("Arial", 20, "bold"))

writing()

import string

alphabet = string.ascii_lowercase # "abcdefghijklmnopqrstuvwxyz"

def decrypt():
    
    encrypted_message = "l nqrz zkdw brxu sodq lv dqg l dp qrw jrlqj wr ohw lw kdsshq. pb frpsdqb dqg pb iruwxqh duh pxfk wrr lpsruwdqw wr ph, dqg brx duh wkh odvw shuvrq lq wkh zruog wkdw zloo hyhu jhw wkhlu kdqgv rq lw. dv ri wrpruurz, l dp uhprylqj brx iurp pb zloo.-eyk".strip()
    print("A Hint: A Caesar Cipher is most likely what the Baron could have used. However, you must guess the number of letter shifts. Input any number and see if it matches the correct key.")
    key = 3
    
    decrypted_message = ""

    for c in encrypted_message:

        if c in alphabet:
            position = alphabet.find(c)
            new_position = (position - key) % 26
            new_character = alphabet[new_position]
            decrypted_message += new_character
        else:
            decrypted_message += c

    guesskey = int(input("Enter key to decrypt: "))
    while guesskey != key:
      print("Your guess was wrong. Guess again!")
      guesskey = int(input("Enter key to decrypt: "))
      
      if guesskey == key:
        print("Shift entered correct.")
        print("\nDecrypting your message... Your decrypted message is: ")
        print(decrypted_message)
        break
      
decrypt()

#SECOND CHALLENGE- RIDDLES
from ColabTurtlePlus.Turtle import *

clearscreen()
bgcolor("black")
setup(1000, 750)
hideturtle()

def writing1():
  penup()
  goto(-300, 100)
  pendown()
  color('white')
  write("CHALLENGE 2", font=("Arial", 65, "bold"))

  penup()
  goto(-400, 50)
  pendown()
  write("The Baron was known to enjoy riddles. If you are able to solve this series of riddles, ", font=("Arial", 20, "bold"))

  penup()
  goto(-400, 25)
  pendown()
  write("you will receive your next clue!", font=("Arial", 20, "bold"))

  penup()
  goto(-400, 0)
  pendown()
  write("You have 3 tries to guess each answer. If all riddles are unsolved, you Detective, ", font=("Arial", 20, "bold"))

  penup()
  goto(-400, -25)
  pendown()
  write("do not receive your clue. Make sure to get them right!", font=("Arial", 20, "bold"))

writing1()


#use user input for this program to generate riddles'
print("What is seen in the middle of March and April that can’t be seen at the beginning or end of either month? Hint: Look at the months themselves")
answer1 = "r"
answer2 = "R"
guess_limit = 3
numtries = 0
gameswon = 0

while guess_limit != numtries:
  guess = input()
  numtries += 1
  if guess == answer1 or guess == answer2:
    gameswon += 1
    print("Correct!")
    print("Move on to the next riddle!")
    break
  else:
    print("Incorrect!")
    if numtries == 3:
      print("You failed to guess this riddle. You must move on to the next.")
      print("Answer: the letter 'r'")

print("What has many teeth but cannot bite? Hint: It is used with your hair")
Answer1 = "comb"
Answer2 = "a comb"
numtries2 = 0

while guess_limit != numtries2:
  guess2 = input()
  numtries2 += 1
  if guess2 == Answer1 or guess2 == Answer2:
    gameswon += 1
    print("Correct!")
    print("Move on to the next riddle!")
    break
  else:
    print("Incorrect!")
    if numtries2 == 3:
      print("You failed to guess this riddle. You must move on to the next.")
      print("Answer: a comb")

print("Laura's father has five daughters: Louise, Lois, Lana, and Leah. What is the fifth daughter's name?")
Answer3 = "Laura"
numtries3 = 0

while guess_limit != numtries3:
  guess3 = input()
  numtries3 += 1
  if guess3 == Answer3:
    gameswon += 1
    print("Correct!")
    break

  else:
    print("Incorrect!")
    if numtries3 == 3:
      print("Answer: The fifth daughter's name is Laura")

if gameswon > 1:
  print("\n Congragulations! You guessed at least one of the Baron's riddles correctly! You will now be awarded with the clue!")
  print("\n Clue: The Baron often was out late at night; some say he was part of a secret organization and came into contact \n with a lot of shady characters. Some of them may have been part of the Irish rebellion.")
else: 
  print("It is tragic that you were unable to guess any of the riddles correctly. Move on to the next challenge for the possibility of a clue.")

#THIRD CHALLENGE- SYMBOLS

from ColabTurtlePlus.Turtle import *

clearscreen()
bgcolor("black")
setup(1000, 750)
hideturtle()

def writing3():
  penup()
  goto(-300, 100)
  pendown()
  color('white')
  write("CHALLENGE 3", font=("Arial", 65, "bold"))

  penup()
  goto(-400, 50)
  pendown()
  write("Your next challenge, Detective, is to see if you can detect the hidden differences ", font=("Arial", 20, "bold"))

  penup()
  goto(-400, 25)
  pendown()

  write("in Baron Von Hapnick's library of symbols.", font=("Arial", 20, "bold"))
  penup()
  goto(-400, 0)
  pendown()

  write("Make sure to look closely and guess whether you believe if 2 symbols are a match or not.", font=("Arial", 20, "bold"))

writing3()

clearscreen()
hideturtle()
speed(12)
color("hotpink")
bgcolor('black')
fillcolor('hotpink')
penup()
goto(-250, 15)
pendown()
  

def squares():
  
    begin_fill()
  
    forward(50)
    right(90)     # Rotate clockwise by 90 degrees

    forward(50)
    right(90)

    forward(50)
    right(90)

    forward(50)
    right(90)
    end_fill()

    penup()
    goto(-150, 15)
    pendown()
    color("lightpink")
    fillcolor("lightpink")
  
    begin_fill()
  
    forward(50)
    right(90)     # Rotate clockwise by 90 degrees

    forward(50)
    right(90)

    forward(50)
    right(90)

    forward(50)
    right(90)
    end_fill()

squares()

question1 = input("Is square 1 different from square 2? Enter Y/N: ")

if question1 == "Y":
  print("Correct! That was an easy one. Let's try something harder!")

else:
  print("Incorrect. The squares are different colors.")

clearscreen()
hideturtle()
speed(12)
bgcolor('black')
penup()
goto(-250, 15)
pendown()
  

def circles():
  width(5)       # Set the width of line
  color("red", "tan")

  begin_fill()
  fillrule("evenodd")
  for i in range(5):
    forward(50)
    right(144)
  end_fill()

  penup()
  goto(-150, 15)
  pendown()
  color("red", "brown")

  begin_fill()
  fillrule("evenodd")
  for i in range(5):
    forward(50)
    right(144)
  end_fill()
circles()

question2 = input("Is star 1 different from star 2? Enter Y/N: ")

if question1 == "Y":
  print("Correct! Last question.")

else:
  print("Incorrect. The stars are filled in with slightly different shades of brown.")

clearscreen()
hideturtle()
speed(12)
bgcolor('black')
penup()
goto(-250, 15)
pendown()
def petal(radius, angle):
    for i in range(2):
        circle(radius, angle)
        left(180 - angle)
        
def flower(n, radius, angle):
    for i in range(n):
        petal(radius, angle)
        left(360.0 / n)
        
def move(length):
    bgcolor("black")
    pu()
    fd(length)
    pd()

def flowers():

  color("blue")
  begin_fill()
  flower(7, 60.0, 60.0)
  end_fill()

  penup()
  goto(-100, 15)
  pendown()

  color("blue")
  begin_fill()
  flower(14, 70.0, 50.0)
  end_fill()

flowers()

question3 = input("Is flower 1 different from flower 2? Enter Y/N: ")

if question3 == "Y":
  print("Correct! You may be awarded with a clue!")
  print("\n Clue: The Baron had a very close relationship with his CFO, Barry McCaulkiner, but other employees often complained about the CFO's jealousy and aggression towards his close friend and boss.")

else:
  print("Incorrect. The flowers each have a different design. Move on to the next challenge")

#FOURTH CHALLENGE- NUMBER GAME

from ColabTurtlePlus.Turtle import *

clearscreen()
bgcolor("black")
setup(1000, 750)
hideturtle()

def writing4():
  penup()
  goto(-300, 100)
  pendown()
  color('white')
  write("CHALLENGE 4", font=("Arial", 65, "bold"))

  penup()
  goto(-300, 50)
  pendown()
  write("PLAY THE NUMBER GAME AND RECEIVE A CLUE", font=("Arial", 30, "bold"))
  
 
writing4()


num = input('Pick a number 1 to 3: ')
if num == '1':
  print('\n Clue: Mrs. Von Hapnik told investigators that her husband was seeming incresingly \n stressed about work in the coming days before his death')
elif num == '2':
  print('\n Clue: Bank Records revealed that Mr. Von Hapnik transferred a large sum of money into \n his retirement account, days before his death')
elif num == '3':
  print('\n Clue: Emoployees of Mr. Von Hapnik said that he began to act strange in the workplace \n before his death, they said he would complain about his wife a lot and assumed that they \n may have gotten into an argument.')
else:
  print('\n Please enter a number from 1 to 3')

murderguess2 = int(input("After going through all of the challenges and clues, finally guess who the murderer is and discover if your guess matches the real identity! Was it suspect 1, 2, or 3? "))

if murderguess2 == 3:
  print("You are correct! The CFO is the killer! Arrest him!")
  print(". . . . . . . .")
  print("YOU WON")


else:
  print("Unfortunately that is incorrect. You will never know the true identity of the killer.")